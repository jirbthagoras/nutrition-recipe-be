// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model Users {
  id           Int            @id @default(autoincrement())
  username     String         @db.Char(30)
  email        String         @unique
  role         Role           @default(USER)
  password     String
  RefreshToken RefreshToken[]
  Complaints   Complaints[]
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  createdAt DateTime @default(now())
  expiredAt DateTime
  user      Users    @relation(fields: [userId], references: [id])
}

model Complaints {
  id        Int    @id @default(autoincrement())
  complaint String
  message String
  userId    Int
  user      Users  @relation(fields: [userId], references: [id])
  Reccomendation Recommendation[]
}

model Products {
  id        Int    @id @default(autoincrement())
  name String @unique
  fat String
  cloricValue String
  protein String
  iron String
  calcium String
  thiamine String
  Recommendation Recommendation[]
}

model Recommendation {
  id        Int    @id @default(autoincrement())
  complaintId Int
  productId Int
  complaint Complaints @relation(fields: [complaintId], references: [id])
  product Products @relation(fields: [productId], references: [id])
}